<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.yes25.personnel.PersonnelDAO">

	<insert id="insert" flushCache="true">
		INSERT INTO users (
			username,
			password,
			emp_name,
			emp_email,
			dept_uid,
			position_uid,
			emp_phone,
			emp_hiredate,
			emp_admin
		)
		VALUES (
			CONCAT(TO_CHAR(sysdate, 'YYMM'), LPAD(user_seq.nextval, 4, 0)),
			CONCAT(TO_CHAR(sysdate, 'YYMM'), LPAD(user_seq.nextval, 4, 0)),
			#{name},
			#{email},
			#{deptno},
			#{positionno},
			#{phone},
			#{hiredate},
			#{admin}
		)
	</insert>

	<insert id="authinsert" flushCache="true">
		INSERT INTO authorities 
		VALUES (
			CONCAT(TO_CHAR(sysdate, 'YYMM'), LPAD(auth_seq.nextval, 4, 0)),
			#{admin}		
		)
	</insert>
	
	<!-- username 으로 사원정보 꺼내기 -->
	<select id="selectByUid" resultType="com.lec.yes25.personnel.UserDTO">
		SELECT 
			username,
			emp_name name,
			emp_email email,
			dept_uid deptno,
			position_uid positionno,
			emp_phone phone, 
			emp_hiredate hiredate,
			emp_admin admin
		FROM 
			users 
		WHERE 
			username = #{username}
	</select>

	<!--  /////////////////////  출근    ///////////////////  -->
	<!-- 출근  -->
	<insert id="goworkinsert" flushCache="true">
		INSERT INTO tb_commute (
			commute_uid, 
			username, 
			commute_date,
			commute_start
		)
		VALUES(
			cmmt_seq.nextval,
			#{username},
			TRUNC(SYSDATE),		
			#{commute_start}
		)
	</insert>

	<!-- 출근시간에 따흔 근무상태 update -->
	<update id="goworkState" flushCache="true">
		UPDATE tb_commute 
		SET
			commute_state = #{commute_state}
		WHERE 
			username = #{username}
		AND 
			TRUNC(SYSDATE) = TRUNC(commute_start)
	</update>

	
	<!-- 해당 username 이 해당 날짜에 출근등록했는지 여부 알아보기 위해 -->
	<select id="GoworkDateByusername" resultType="java.lang.String" >
		SELECT TO_CHAR(COMMUTE_START, 'yyyy-mm-dd')
		FROM 
			tb_commute	
		WHERE
			username = #{username}
		AND 
			TRUNC(SYSDATE) = TRUNC(commute_start)
	</select>

	<!-- 출근시각 날짜 시 분 초 모두 가져오기 -->
	<select id="selectGowork" resultType="java.util.Date">
		SELECT commute_start
		FROM 
			tb_commute
		WHERE 
			username = #{username}
		AND 
			TRUNC(SYSDATE) = TRUNC(commute_start)
	</select>

	<!--  /////////////////////  퇴근   ///////////////////  -->
	<!-- 퇴근 -->
	<!-- 일단 조회 -->
	<select id="OutworkDateByusername" resultType="java.lang.String">
		SELECT 
			TO_CHAR(commute_end, 'yyyy-mm-dd') 
		FROM 
			tb_commute
		WHERE 
			username = #{username}
		AND 
			TRUNC(SYSDATE) = TRUNC(commute_end)
	</select>

	<update id="outworkUpdate" flushCache="true">
		UPDATE 
			tb_commute
		SET 
			commute_end = #{commute_end}
		WHERE 
			username = #{username}
		AND 
			TRUNC(SYSDATE) = TRUNC(COMMUTE_START)
	</update>

	<update id="outworkState" flushCache="true">
		UPDATE tb_commute 
		SET
			commute_state = #{commute_state}
		WHERE 
			username = #{username}
		AND 
			TRUNC(SYSDATE) = TRUNC(commute_end)
	</update>
	
	<!--  /////////////////////  초과근무   ///////////////////  -->
	<!-- 초과근무시간 select -->
	<select id="selectOverwork" resultType="java.lang.String">
		SELECT TO_CHAR(commute_overtime, 'yyyy-mm-dd')
		FROM tb_commute
		WHERE username = #{username}
		AND TRUNC(SYSDATE) = TO_DATE(#{commute_end} , 'yyyy-mm-dd')
	</select>
	
	<!-- 초과근무시간 update-->
	<update id="overWorkUpdate" flushCache="true">
		UPDATE tb_commute
		SET
			commute_overtime = #{commute_overtime}
		WHERE 
			username = #{username}
		AND
			TRUNC(SYSDATE) = TO_DATE(#{commute_end}, 'yyyy-mm-dd')
	</update>


	<!--  /////////////////////  총근무시간   ///////////////////  -->
	<!-- 총근무시간 update -->
	<update id="totalWorkUpdate" flushCache="true">
		UPDATE tb_commute
		SET 
			commute_total = #{commute_total}
		WHERE
			username = #{username}
		AND 
			TRUNC(SYSDATE) = TRUNC(commute_end)
	</update>


	<!--  /////////////////////  근무상태   ///////////////////  -->
	<!-- 근무상태 조회 select -->
	<select id="selectState" resultType="java.lang.String">
		SELECT commute_state
		FROM 
			tb_commute
		WHERE
			username = #{username}
		AND 
			TRUNC(SYSDATE) = TRUNC(commute_end)
	</select>
	
	<!--  /////////////////////  tb_commute 조회   ///////////////////  -->
	<!-- 설정한 날짜 기간의 근무현황 조회하기  -->	
	<select id="selectCmmt" resultType="com.lec.yes25.personnel.CmmtDTO">
		SELECT 
			commute_uid cmmtUid, 
			username, 
			commute_date cmmtDate, 
			commute_start cmmtStart,
			commute_end cmmtEnd, 
			commute_overtime cmmtOver, 
			commute_total cmmtTotal, 
			commute_state cmmtState, 
			commute_is_apply cmmtIsApply
		FROM 
			tb_commute
		WHERE 
			USERNAME = #{username}
		AND 
			commute_date 
				BETWEEN TRUNC(#{start}) AND TRUNC(#{end})
	</select>
	
	<select id="selectFromRowBetweenDate" 
		resultType="com.lec.yes25.personnel.CmmtDTO">
		<![CDATA[
		SELECT 
			commute_date cmmtDate, 
			commute_start cmmtStart,
			commute_end cmmtEnd, 
			commute_overtime cmmtOver, 
			commute_total cmmtTotal, 
			commute_state cmmtState, 
			commute_is_apply cmmtIsApply
		FROM 
			(
			SELECT 
				ROWNUM AS RNUM, T.* 
			FROM 
				(SELECT * FROM tb_commute 
				WHERE 
					USERNAME = #{username}
				AND 
					commute_date BETWEEN TRUNC(#{start}) AND TRUNC(#{end})
				ORDER BY commute_date DESC) T) 
		WHERE 
			RNUM >= #{from} AND RNUM < (#{from} + #{pageRows}
			) ]]>
	</select>
	
	<select id="countAll" resultType="int"> 
		SELECT count(*) FROM tb_commute
	</select>
	
	
	
	
	
	


</mapper>